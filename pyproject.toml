# --- PROJECT CONFIGURATION --- #

[build-system]
requires = ["setuptools>=67", "wheel", "setuptools-git-versioning>=2.0,<3"]
build-backend = "setuptools.build_meta"

[project]
name = "Python Scripts"
dynamic = ["version"]
description = "A tool to automatically update music genre information."
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.12"
license = { text = "MIT License" }
authors = [{ name = "Roman Borodavkin" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
]
dependencies = [
  # Core dependencies
  "aenum>=3.1.16",
  "aiohttp>=3.8.0",
  "aiosignal>=1.3.2",
  "annotated-types>=0.7.0",
  "attrs>=25.3.0",
  "certifi>=2025.4.26",
  "chardet>=5.2.0",
  "charset-normalizer>=3.4.2",
  "defusedxml>=0.7.1",
  "dnspython>=2.7.0",
  "frozenlist>=1.6.2",
  "GitPython>=3.1.44",
  "idna>=3.10",
  "Jinja2>=3.1.6",
  "lxml>=5.4.0",
  "markdown-it-py>=3.0.0",
  "multidict>=6.4.4",
  "PyYAML>=6.0.2",
  "python-dotenv>=0.9.9",
  "requests>=2.31.0",
  "tenacity>=9.1.2",
  "typer>=0.9.4",
  "yarl>=1.9.4",
  "pydantic<2.0",
]

[project.optional-dependencies]
dev = [
  # Testing
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.0.0",
  "pytest-mock>=3.11.0",
  "pytest-xdist>=3.3.0",
  "unittest-xml-reporting>=3.2.0",

  # Linting and type checking
  "mypy>=1.0.0",
  "ruff>=0.9.2",
  "types-requests>=2.31.0",
  "types-python-dateutil>=2.8.19",
  "types-pyyaml>=6.0.0",
  "types-pytz>=2023.3.0",

  # Documentation
  "mkdocs>=1.4.0",
  "mkdocs-material>=9.0.0",
  "mkdocstrings[python]>=0.20.0",
  "mkdocs-autorefs>=0.4.0",
  "mkdocs-jupyter>=0.24.0",

  # Development tools
  "pre-commit>=3.0.0",
  "black>=23.0.0",
  "isort>=5.12.0",
  "mypy-extensions>=1.0.0",
  "pip-tools>=6.12.0",
  "ipython>=8.0.0",
  "ipdb>=0.13.0",

  # LSP Support
  "python-lsp-server[all]>=1.7.0",
  "pylsp-mypy>=0.6.0",
  "python-lsp-ruff>=1.6.0",
  "python-lsp-black>=1.2.0",
  "python-lsp-isort>=1.2.0",
  "python-lsp-jsonrpc>=1.0.0",
]

[tool.setuptools.packages.find]
where = ["Genres Autoupdater v2.0"]
include = ["genres_autoupdater*", "services", "utils*"]
namespaces = false

[project.scripts]
# Put entrypoints in here
genre-updater = "music_genre_updater:main"

[project.urls]
repository = "https://bitbucket.org/automatitdevops/noc-general-template/src/main/"

[tool.setuptools]
include-package-data = false

[tool.setuptools-git-versioning]
enabled = true

[tool.ruff]
line-length = 150
target-version = "py312"
exclude = [
  ".git",
  ".hg",
  ".mypy_cache",
  ".tox",
  ".venv",
  "_build",
  "buck-out",
  "build",
  "dist",
  "__pycache__",
  "*/__init__.py",
]

# Formatting
[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"
docstring-code-format = true
skip-magic-trailing-comma = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
fixable = ["ALL"]
select = [
  "E",   # Pycodestyle errors
  "F",   # PyFlakes
  "W",   # Pycodestyle warnings
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "C90", # flake8-comprehensions
  "D",   # pydocstyle
  "A",   # flake8-annotations
  "UP",  # pyupgrade
  "S",   # flake8-bandit
  "ARG", # flake8-unused-arguments
  "RUF", # Ruff-specific
  "PL",  # Pylint
  "N",   # pep8-naming
]

ignore = [
  "E203",    # conflict with Black.
  "PLR0913", # Too many arguments in function definition
  "C901",    # Function is too complex
  "PLR0912", # Too many branches
  "PLR0915", # Too many statements
]

[tool.ruff.lint.isort]
known-first-party = [
  "genres_autoupdater",
  "services",
  "utils",
  "music_genre_updater",
]
force-sort-within-sections = false
lines-after-imports = 1
lines-between-types = 1
combine-as-imports = true
order-by-type = true
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.mccabe]
max-complexity = 15

# ─────────────────────────────────────────────────────────────────────────────
# pydocstyle - google docstyle
# ─────────────────────────────────────────────────────────────────────────────
[tool.pydocstyle]
convention = "google"
add_ignore = [
  "D203",
  "D213",
  "D215",
  "D400",
  "D401",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]

# ─────────────────────────────────────────────────────────────────────────────
# MyPy - static type checking
# ─────────────────────────────────────────────────────────────────────────────
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = false
disallow_untyped_defs = true
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
